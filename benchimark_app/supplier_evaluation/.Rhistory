alpha = 0.9, stroke = 1.5) +
# Add a highlight circle around the selected company
geom_sf(data = suppliers_sf %>% filter(Company == selected_company),
color = "black", fill = NA, shape = 21, size = 16, stroke = 1.2) +
# Add text labels
geom_text_repel(
data = suppliers_sf,
aes(
label = paste0(Company, " (", City, ")"),
geometry = geometry,
color = Company
),
stat = "sf_coordinates",
fontface = "bold",
point.padding = 0.5,
segment.color = "grey50",
box.padding = 0.5,
force = 5,
max.overlaps = 15
) +
# Set color scales
scale_color_manual(values = company_colors) +
scale_size_continuous(range = c(5, 12), name = "Average Score") +
# Add a scale bar and north arrow (from ggspatial if available)
# If you have ggspatial: annotation_scale() + annotation_north_arrow()
# Set labels
labs(
title = paste("Geographical Distribution of Suppliers in Italy -", selected_company, "Highlighted"),
subtitle = "Size indicates average performance score across all metrics",
caption = paste0(
"Total suppliers: ", nrow(suppliers_data), " | ",
"Selected supplier location: ",
suppliers_data %>% filter(Company == selected_company) %>% pull(City)
)
) +
# Use a clean theme
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5, margin = margin(b = 15)),
legend.position = "right",
legend.title = element_text(face = "bold"),
legend.box = "vertical",
panel.grid = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.border = element_rect(color = "gray80", fill = NA, size = 0.5),
plot.caption = element_text(hjust = 0, face = "italic", margin = margin(t = 10))
)
suppliers_sf <- suppliers_data %>%
st_as_sf(coords = c("lon", "lat"), crs = 4326) %>%
mutate(
point_size = avg_score,
highlight = ifelse(Company == selected_company, "yes", "no")
)
# Create an improved map
map_plot <- ggplot() +
# Add Italy regions with light fill
geom_sf(data = italy_nuts2, fill = "gray95", color = "gray80", size = 0.2) +
# Add province boundaries with thinner lines
geom_sf(data = italy_nuts3, fill = NA, color = "gray70", size = 0.1) +
# Add major cities as small reference points
geom_sf(data = italy_cities, color = "gray50", size = 0.5, alpha = 0.6) +
# Add supplier points
geom_sf(data = suppliers_sf,
aes(color = Company, size = point_size),
alpha = 0.9, stroke = 1.5) +
# Add a highlight circle around the selected company
geom_sf(data = suppliers_sf %>% filter(Company == selected_company),
color = "black", fill = NA, shape = 21, size = 16, stroke = 1.2) +
# Add text labels
geom_text_repel(
data = suppliers_sf,
aes(
label = paste0(Company, " (", City, ")"),
geometry = geometry,
color = Company
),
stat = "sf_coordinates",
fontface = "bold",
point.padding = 0.5,
segment.color = "grey50",
box.padding = 0.5,
force = 5,
max.overlaps = 15
) +
# Set color scales
scale_color_manual(values = company_colors) +
scale_size_continuous(range = c(5, 12), name = "Average Score") +
# Add a scale bar and north arrow (from ggspatial if available)
# If you have ggspatial: annotation_scale() + annotation_north_arrow()
# Set labels
labs(
title = paste("Geographical Distribution of Suppliers in Italy -", selected_company, "Highlighted"),
subtitle = "Size indicates average performance score across all metrics",
caption = paste0(
"Total suppliers: ", nrow(suppliers_data), " | ",
"Selected supplier location: ",
suppliers_data %>% filter(Company == selected_company) %>% pull(City)
)
) +
# Use a clean theme
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5, margin = margin(b = 15)),
legend.position = "right",
legend.title = element_text(face = "bold"),
legend.box = "vertical",
panel.grid = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.border = element_rect(color = "gray80", fill = NA, size = 0.5),
plot.caption = element_text(hjust = 0, face = "italic", margin = margin(t = 10))
)
map_plot
library(sf)
# Load necessary packages if not already loaded
# install.packages(c("giscoR", "sf", "ggrepel"))
# library(giscoR)
library(sf)
# library(ggrepel)
# Get Italy map at NUTS level 2 (regions)
italy_nuts2 <- gisco_get_nuts(
country = "Italy",
resolution = "01", #'01','03','10','20','60'
nuts_level = 2
)
# Get Italian provinces (NUTS level 3)
italy_nuts3 <- gisco_get_nuts(
country = "Italy",
resolution = "01",
nuts_level = 3
)
# Get major Italian cities
library(maps)
italy_cities <- world.cities %>% filter(country.etc == "Italy")
# Convert supplier data to sf object for spatial plotting
suppliers_sf <- suppliers_data %>%
st_as_sf(coords = c("lon", "lat"), crs = 4326) %>%
mutate(
point_size = avg_score,
highlight = ifelse(Company == selected_company, "yes", "no")
)
# Create an improved map
map_plot <- ggplot() +
# Add Italy regions with light fill
geom_sf(data = italy_nuts2, fill = "gray95", color = "gray80", size = 0.2) +
# Add province boundaries with thinner lines
geom_sf(data = italy_nuts3, fill = NA, color = "gray70", size = 0.1) +
# Add major cities as small reference points
geom_sf(data = italy_cities, color = "gray50", size = 0.5, alpha = 0.6) +
# Add supplier points
geom_sf(data = suppliers_sf,
aes(color = Company, size = point_size),
alpha = 0.9, stroke = 1.5) +
# Add a highlight circle around the selected company
geom_sf(data = suppliers_sf %>% filter(Company == selected_company),
color = "black", fill = NA, shape = 21, size = 16, stroke = 1.2) +
# Add text labels
geom_text_repel(
data = suppliers_sf,
aes(
label = paste0(Company, " (", City, ")"),
geometry = geometry,
color = Company
),
stat = "sf_coordinates",
fontface = "bold",
point.padding = 0.5,
segment.color = "grey50",
box.padding = 0.5,
force = 5,
max.overlaps = 15
) +
# Set color scales
scale_color_manual(values = company_colors) +
scale_size_continuous(range = c(5, 12), name = "Average Score") +
# Add a scale bar and north arrow (from ggspatial if available)
# If you have ggspatial: annotation_scale() + annotation_north_arrow()
# Set labels
labs(
title = paste("Geographical Distribution of Suppliers in Italy -", selected_company, "Highlighted"),
subtitle = "Size indicates average performance score across all metrics",
caption = paste0(
"Total suppliers: ", nrow(suppliers_data), " | ",
"Selected supplier location: ",
suppliers_data %>% filter(Company == selected_company) %>% pull(City)
)
) +
# Use a clean theme
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5, margin = margin(b = 15)),
legend.position = "right",
legend.title = element_text(face = "bold"),
legend.box = "vertical",
panel.grid = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.border = element_rect(color = "gray80", fill = NA, size = 0.5),
plot.caption = element_text(hjust = 0, face = "italic", margin = margin(t = 10))
)
map_plot
# Load necessary packages if not already loaded
# install.packages(c("giscoR", "sf", "ggrepel"))
# library(giscoR)
library(sf)
# library(ggrepel)
# Get Italy map at NUTS level 2 (regions)
italy_nuts2 <- gisco_get_nuts(
country = "Italy",
resolution = "01", #'01','03','10','20','60'
nuts_level = 2
)
# Get Italian provinces (NUTS level 3)
italy_nuts3 <- gisco_get_nuts(
country = "Italy",
resolution = "01",
nuts_level = 3
)
# Get major Italian cities from maps package
library(maps)
italy_cities_df <- world.cities %>%
filter(country.etc == "Italy") %>%
as.data.frame()
# Convert cities to sf object
italy_cities_sf <- italy_cities_df %>%
st_as_sf(coords = c("long", "lat"), crs = 4326)
# Convert supplier data to sf object for spatial plotting
suppliers_sf <- suppliers_data %>%
st_as_sf(coords = c("lon", "lat"), crs = 4326) %>%
mutate(
point_size = avg_score,
highlight = ifelse(Company == selected_company, "yes", "no")
)
# Create an improved map
map_plot <- ggplot() +
# Add Italy regions with light fill
geom_sf(data = italy_nuts2, fill = "gray95", color = "gray80", size = 0.2) +
# Add province boundaries with thinner lines
geom_sf(data = italy_nuts3, fill = NA, color = "gray70", size = 0.1) +
# Add major cities as small reference points
geom_sf(data = italy_cities_sf, color = "gray50", size = 0.5, alpha = 0.6) +
# Add supplier points
geom_sf(data = suppliers_sf,
aes(color = Company, size = point_size),
alpha = 0.9, stroke = 1.5) +
# Add a highlight circle around the selected company
geom_sf(data = suppliers_sf %>% filter(Company == selected_company),
color = "black", fill = NA, shape = 21, size = 16, stroke = 1.2) +
# Add text labels for suppliers
ggrepel::geom_text_repel(
data = as.data.frame(st_coordinates(suppliers_sf)) %>%
bind_cols(suppliers_sf %>% st_drop_geometry()),
aes(
x = X,
y = Y,
label = paste0(Company, " (", City, ")"),
color = Company
),
fontface = "bold",
point.padding = 0.5,
segment.color = "grey50",
box.padding = 0.5,
force = 5,
max.overlaps = 15
) +
# Set color scales
scale_color_manual(values = company_colors) +
scale_size_continuous(range = c(5, 12), name = "Average Score") +
# Set labels
labs(
title = paste("Geographical Distribution of Suppliers in Italy -", selected_company, "Highlighted"),
subtitle = "Size indicates average performance score across all metrics",
caption = paste0(
"Total suppliers: ", nrow(suppliers_data), " | ",
"Selected supplier location: ",
suppliers_data %>% filter(Company == selected_company) %>% pull(City)
)
) +
# Use a clean theme
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5, margin = margin(b = 15)),
legend.position = "right",
legend.title = element_text(face = "bold"),
legend.box = "vertical",
panel.grid = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.border = element_rect(color = "gray80", fill = NA, size = 0.5),
plot.caption = element_text(hjust = 0, face = "italic", margin = margin(t = 10))
) +
# Add a proper coord_sf to ensure correct projection
coord_sf(xlim = c(6.5, 18.5), ylim = c(36, 47.5))
map_plot
# Load necessary packages if not already loaded
# install.packages(c("giscoR", "sf", "ggrepel"))
# library(giscoR)
library(sf)
# library(ggrepel)
# Get Italy map at NUTS level 2 (regions)
italy_nuts2 <- gisco_get_nuts(
country = "Italy",
resolution = "01", #'01','03','10','20','60'
nuts_level = 2
)
# Get Italian provinces (NUTS level 3)
italy_nuts3 <- gisco_get_nuts(
country = "Italy",
resolution = "01",
nuts_level = 3
)
# Get major Italian cities from maps package
library(maps)
italy_cities_df <- world.cities %>%
filter(country.etc == "Italy") %>%
as.data.frame()
# Convert cities to sf object
italy_cities_sf <- italy_cities_df %>%
st_as_sf(coords = c("long", "lat"), crs = 4326)
# Convert supplier data to sf object for spatial plotting
suppliers_sf <- suppliers_data %>%
st_as_sf(coords = c("lon", "lat"), crs = 4326) %>%
mutate(
point_size = avg_score,
highlight = ifelse(Company == selected_company, "yes", "no")
)
# Create an improved map
map_plot <- ggplot() +
# Add Italy regions with light fill
geom_sf(data = italy_nuts2, fill = "gray95", color = "gray80", size = 0.2) +
# Add province boundaries with thinner lines
geom_sf(data = italy_nuts3, fill = NA, color = "gray70", size = 0.1) +
# Add major cities as small reference points
geom_sf(data = italy_cities_sf, color = "gray50", size = 0.5, alpha = 0.6) +
# Add supplier points
geom_sf(data = suppliers_sf,
aes(color = Company, size = point_size),
alpha = 0.9, stroke = 1.5) +
# Add a highlight circle around the selected company
geom_sf(data = suppliers_sf %>% filter(Company == selected_company),
color = "black", fill = NA, shape = 21, size = 16, stroke = 1.2) +
# Add text labels for suppliers
ggrepel::geom_text_repel(
data = as.data.frame(st_coordinates(suppliers_sf)) %>%
bind_cols(suppliers_sf %>% st_drop_geometry()),
aes(
x = X,
y = Y,
label = paste0(Company, " (", City, ")"),
color = Company
),
fontface = "bold",
point.padding = 0.5,
segment.color = "grey50",
box.padding = 0.5,
force = 5,
max.overlaps = 15
) +
# Set color scales
scale_color_manual(values = company_colors) +
scale_size_continuous(range = c(5, 12), name = "Average Score") +
# Set labels
labs(
title = paste("Geographical Distribution of Suppliers in Italy -", selected_company, "Highlighted"),
subtitle = "Size indicates average performance score across all metrics",
caption = paste0(
"Total suppliers: ", nrow(suppliers_data), " | ",
"Selected supplier location: ",
suppliers_data %>% filter(Company == selected_company) %>% pull(City)
)
) +
# Use a clean theme
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5, margin = margin(b = 15)),
legend.position = "none",
legend.title = element_text(face = "bold"),
legend.box = "vertical",
panel.grid = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.border = element_rect(color = "gray80", fill = NA, size = 0.5),
plot.caption = element_text(hjust = 0, face = "italic", margin = margin(t = 10))
) +
# Add a proper coord_sf to ensure correct projection
coord_sf(xlim = c(6.5, 18.5), ylim = c(36, 47.5))
map_plot
# Load necessary packages if not already loaded
# install.packages(c("giscoR", "sf", "ggrepel"))
# library(giscoR)
library(sf)
# library(ggrepel)
# Get Italy map at NUTS level 2 (regions)
italy_nuts2 <- gisco_get_nuts(
country = "Italy",
resolution = "01", #'01','03','10','20','60'
nuts_level = 2
)
# Get Italian provinces (NUTS level 3)
italy_nuts3 <- gisco_get_nuts(
country = "Italy",
resolution = "01",
nuts_level = 3
)
# Get major Italian cities from maps package
library(maps)
italy_cities_df <- world.cities %>%
filter(country.etc == "Italy") %>%
as.data.frame()
# Convert cities to sf object
italy_cities_sf <- italy_cities_df %>%
st_as_sf(coords = c("long", "lat"), crs = 4326)
# Convert supplier data to sf object for spatial plotting
suppliers_sf <- suppliers_data %>%
st_as_sf(coords = c("lon", "lat"), crs = 4326) %>%
mutate(
point_size = avg_score,
highlight = ifelse(Company == selected_company, "yes", "no")
)
# Create an improved map
map_plot <- ggplot() +
# Add Italy regions with light fill
geom_sf(data = italy_nuts2, fill = "gray95", color = "gray80", size = 0.2) +
# Add province boundaries with thinner lines
geom_sf(data = italy_nuts3, fill = NA, color = "gray70", size = 0.1) +
# Add major cities as small reference points
geom_sf(data = italy_cities_sf, color = "gray50", size = 0.5, alpha = 0.6) +
# Add supplier points
geom_sf(data = suppliers_sf,
aes(color = Company, size = point_size),
alpha = 0.9, stroke = 1.5) +
# Add a highlight circle around the selected company
geom_sf(data = suppliers_sf %>% filter(Company == selected_company),
color = "black", fill = NA, shape = 21, size = 16, stroke = 1.2) +
# Add text labels for suppliers
ggrepel::geom_text_repel(
data = as.data.frame(st_coordinates(suppliers_sf)) %>%
bind_cols(suppliers_sf %>% st_drop_geometry()),
aes(
x = X,
y = Y,
label = paste0(Company, " (", City, ")"),
color = Company
),
fontface = "bold",
point.padding = 0.5,
segment.color = "grey50",
box.padding = 0.5,
force = 5,
max.overlaps = 15
) +
# Set color scales
scale_color_manual(values = company_colors) +
scale_size_continuous(range = c(5, 12), name = "Average Score") +
# Set labels
labs(
# title = paste("Geographical Distribution of Suppliers in Italy -", selected_company, "Highlighted"),
# subtitle = "Size indicates average performance score across all metrics",
caption = paste0(
"Total suppliers: ", nrow(suppliers_data), " | ",
"Selected supplier location: ",
suppliers_data %>% filter(Company == selected_company) %>% pull(City)
)
) +
# Use a clean theme
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5, margin = margin(b = 15)),
legend.position = "none",
legend.title = element_text(face = "bold"),
legend.box = "vertical",
panel.grid = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.border = element_rect(color = "gray80", fill = NA, size = 0.5),
plot.caption = element_text(hjust = 0, face = "italic", margin = margin(t = 10))
) +
# Add a proper coord_sf to ensure correct projection
coord_sf(xlim = c(6.5, 18.5), ylim = c(36, 47.5))
map_plot
shiny::runApp('app/Layout_test')
runApp('app/Layout_test')
runApp('app/Layout_test')
shiny::runApp('app')
runApp('app/Layout_test')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
runApp('app')
runApp('app')
runApp('app')
